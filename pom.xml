<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>us.mccrory</groupId>
	<artifactId>dj4j-experiment</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>

	<name>DeepLearning4j Experiment based on DL4J Examples Parent</name>
	<description>Examples of training different data sets</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<shadedClassifier>bin</shadedClassifier>

		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<dl4j.version>1.0.0-beta3</dl4j.version>
		<nd4j.version>${dl4j.version}</nd4j.version>
		<datavec.version>${dl4j.version}</datavec.version>
		<arbiter.version>${dl4j.version}</arbiter.version>
		<rl4j.version>${dl4j.version}</rl4j.version>

		<guava.version>19.0</guava.version>
		<jfreechart.version>1.0.13</jfreechart.version>
		<jcommon.version>1.0.23</jcommon.version>
		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
		<exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
		<maven.minimum.version>3.3.1</maven.minimum.version>
		<javafx.version>2.2.3</javafx.version>
		<javafx.runtime.lib.jar>${env.JAVAFX_HOME}/jfxrt.jar</javafx.runtime.lib.jar>
		<aws.sdk.version>1.11.109</aws.sdk.version>
		<jackson.version>2.9.8</jackson.version>

	</properties>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- deeplearning4j-core: contains main functionality and neural networks -->
		<dependency>
			<groupId>org.deeplearning4j</groupId>
			<artifactId>deeplearning4j-core</artifactId>
			<version>${dl4j.version}</version>
		</dependency>

		<!-- ND4J backend: every project needs one of these. The backend defines 
			the hardware on which network training will occur. "nd4j-native-platform" 
			is for CPUs only (for running on all operating systems). -->
		<dependency>
			<groupId>org.nd4j</groupId>
			<artifactId>nd4j-native-platform</artifactId>
			<version>${nd4j.version}</version>
		</dependency>

		<!-- CUDA: to use GPU for training (CUDA) instead of CPU, uncomment this, 
			and remove nd4j-native-platform -->
		<!-- Requires CUDA to be installed to use. Change the version (8.0, 9.0, 
			9.1) to change the CUDA version <dependency> <groupId>org.nd4j</groupId> 
			<artifactId>nd4j-cuda-9.2-platform</artifactId> <version>${nd4j.version}</version> 
			</dependency> -->

		<!-- Optional, but recommended: if you use CUDA, also use CuDNN. To use 
			this, CuDNN must also be installed -->
		<!-- See: https://deeplearning4j.org/cudnn <dependency> <groupId>org.deeplearning4j</groupId> 
			<artifactId>deeplearning4j-cuda-9.2</artifactId> <version>${dl4j.version}</version> 
			</dependency> -->

		<!-- Logging API similar to log4j -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Used in the feedforward/classification/MLP* and feedforward/regression/RegressionMathFunctions 
			example -->
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>${jfreechart.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jcommon</artifactId>
			<version>${jcommon.version}</version>
		</dependency>

		<!-- Used for downloading data in some of the examples -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		
		<!-- Jackson REST/JSON marshalling -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		</dependency>

	</dependencies>

	<build>

		<plugins>
		
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.9</version>
				<configuration>
					<repository>${project.artifactId}</repository>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Maven compiler plugin: compile for Java 8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>

	</build>

</project>